# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: Float
  uuid: String
  email: String
  firstName: String
  lastName: String
  language: Language
  createdAt: DateTime
  updatedAt: DateTime
}

enum Language {
  ENGLISH
  SPANISH
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type LoginOutput {
  access_token: String!
  expiresAt: DateTime!
  user: User!
}

type Knowledge {
  id: Float
  uuid: String
  academyId: Int
  title: String
  description: String
  createdAt: DateTime
  updatedAt: DateTime
}

type Academy {
  id: Float
  uuid: String
  userId: Int
  name: String
  owner: User
  createdAt: DateTime
  updatedAt: DateTime
}

type Ticket {
  id: Float
  uuid: String
  userId: Int
  title: String
  description: String
  owner: User
  createdAt: DateTime
  updatedAt: DateTime
}

type Review {
  id: Float
  uuid: String
  userId: Int
  ticketId: Int
  comment: String
  description: String
  owner: User
  ticket: Ticket
  createdAt: DateTime
  updatedAt: DateTime
}

type Query {
  user: User!
  academy(where: AcademyWhereUniqueInput!): Academy!
  knowledge(where: KnowledgeWhereUniqueInput!): Knowledge!
  review(where: ReviewWhereUniqueInput!): Review!
  ticket(where: TicketWhereUniqueInput!): Ticket!
}

input AcademyWhereUniqueInput {
  uuid: String
  name: String
}

input KnowledgeWhereUniqueInput {
  uuid: Float
  id: Float
  title: String
  description: String
}

input ReviewWhereUniqueInput {
  id: Float!
  uuid: String!
  comment: String
}

input TicketWhereUniqueInput {
  id: Float!
  uuid: String
  title: String
  description: String
}

type Mutation {
  login(data: LoginUserInput!): LoginOutput!
  signup(data: SignUpInput!): User!
  createUser(data: UserCreateInput!): User!
  createAcademy(data: AcademyCreateInput!): Academy!
  createKnowledge(data: KnowledgeCreateInput!): Knowledge!
  createReview(data: ReviewCreateInput!): Review!
  createTicket(data: TicketCreateInput!): Ticket!
}

input LoginUserInput {
  email: String!
  password: String!
}

input SignUpInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  language: Language
}

input UserCreateInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  language: Language!
}

input AcademyCreateInput {
  name: String!
  owner: UserCreateNestedOneWithoutAcademyInput!
}

input UserCreateNestedOneWithoutAcademyInput {
  connect: UserWhereUniqueInput!
}

input UserWhereUniqueInput {
  uuid: String
  email: String
}

input KnowledgeCreateInput {
  title: String!
  description: String!
  academyId: Int
}

input ReviewCreateInput {
  userId: Float!
  ticketId: Float!
  comment: String!
}

input TicketCreateInput {
  title: String!
  description: String!
  userId: Float!
  knowledgeId: Float!
}